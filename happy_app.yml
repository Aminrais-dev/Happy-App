openapi: 3.0.0
info:
  title: Capstone Project
  description: Tugas Untuk Peserta Immersive
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/nawihusen/Capstone/1.0.0
  # - description: 
  #   url: 
tags:
  - name: Login
    description: Login Page
  - name: Sign Up
    description: Sign Page
  - name: User
    description: User Page
  - name: Community
    description: Community Page
  - name: Community Event
    description: Community Event Page
  - name: Community Feed
    description: Community Feed Page
  - name: Community Store
    description: Community Store Page

paths:
############################
# GET TOKEN
###########################
  /login:
    post:
      tags:
        - Login
      summary: Get token for access to account
      requestBody:
        $ref: "#/components/requestBodies/requestBodyLogin"
      responses:
        "200":
          $ref: "#/components/responses/loginSuccess"
        "400":
          $ref: "#/components/responses/loginFailed"
##########################
# REGISTER
##########################
  /signup:
    post:
      tags:
        - Sign Up
      summary: Create a new account for customer only
      requestBody:
        $ref: "#/components/requestBodies/requestBodyUser"
      responses:
        "200":
          $ref: "#/components/responses/successOperationNonData"
        "400":
          $ref: "#/components/responses/failedsign"
##########################
# USER
##########################
  /user/profile:
    get:
      tags:
        - "User"
      summary: Profile User
      description: Berisi berbagai data yang di miliki oleh user
      responses:
        "200": 
          $ref: "#/components/responses/getprofile"
        "400":
          $ref: "#/components/responses/failedresponse"
    put:
      tags:
        - "User"
      summary: Update User data
      description: Digunakan untuk mengubah data yang dimiliki user
      requestBody:
        $ref: "#/components/requestBodies/updateuserrequestbody"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
    delete:
      tags:
        - "User"
      summary: Delete User Account
      description: menghapus akun yang dimiliki user
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
#########################
# COMMUNITY
#########################
  /community:
    get:
      tags:
        - "Community"
      summary: List Community
      description: Berisi list community yang terdaftar
      responses:
        "200":
          $ref: "#/components/responses/successgetlistcommunity"
        "400":
          $ref: "#/components/responses/failedgetcommunity"
    post:
      tags:
        - "Community"
      summary: Add Community
      description: User akan membuat sebuah community 
      requestBody:
        $ref: "#/components/requestBodies/requestBodyCommunity"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
  /community/{id}/members:
    get:
      tags:
        - "Community"
      summary: Get All Community Members
      parameters:
        - $ref: "#/components/parameters/ParamId"
      description: digunkan untuk mendapatakan semua user yang ada dalam community
      responses:
        "200":
          $ref: "#/components/responses/members"
        "400":
          $ref: "#/components/responses/failedresponse"

  /community/{id}:
    get:
      tags:
        - "Community"
      summary: Go to Community Page
      description: masuk ke page community
      parameters:
        - $ref: "#/components/parameters/ParamId"
      responses:
        "200":
          $ref: "#/components/responses/community"
        "400":
          $ref: "#/components/responses/failedresponse"
    put:
      tags:
        - "Community"
      summary: Update Community
      description: Update community hanya bisa dilakukan oleh admin
      parameters:
        - $ref: "#/components/parameters/ParamId"
      requestBody:
        $ref:  "#/components/requestBodies/updaterequestBodyCommunity"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
    delete:
      tags:
        - "Community"
      summary: Out from A community
      description: Keluar dari sebuah community
      parameters:
        - $ref: "#/components/parameters/ParamId"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
################################
# EVENT
################################
  /community/{id}/event:        
    get:
      tags:
        - "Community Event"
      summary: Go To Communities event
      description: Memasuki page event yang di adakan oleh community yang bersangkutan
      responses:
        "200":
          $ref: "#/components/responses/communiteventlist"
        "400":
          $ref: "#/components/responses/failedresponse"
    post:
      tags:
        - "Community Event"
      summary: Add An Event In Community
      description: Menambahkan event pada sebuah community 
      requestBody: 
        $ref: "#/components/requestBodies/eventrequestbody"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"

  /community/{id}/event/{id}:
    get:
      tags:
        - "Community Event"
      summary: Go to Event Detail Page
      description: Menampilkan halaman yang memuat event secara rinci
      responses:
        "200":
          $ref: "#/components/responses/eventdetail"
        "400":
          $ref: "#/components/responses/failedresponse"        

        


        


components:
##########################
# SCHEMA
###########################
  schemas:
    requestDataLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    responseLoginWithData:
      type: object
      properties:
        Code:
          type: integer
        Data:
          type: object
          properties:
            ID:
              type: integer
            Token:
              type: string
            Role:
              type: string
        Message:
          type: string
    requestDataUser:
      type: object
      required:
        - name
        - username
        - gender
        - email
        - password
      properties:
        name:
          type: string
          minLength: 1
        username:
          type: string
          minLength: 1
        gender:
          enum:
            - male
            - female
        email:
          type: string
          format: email
          minLength: 5
          description: email must be unique
        password:
          type: string
          minLength: 6
    updateDataUser:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        username:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 5
          description: email must be unique
        password:
          type: string
          minLength: 6
        foto:
          type: string
          format: binary
    listgetcommunity:
      type: object
      properties:
        community:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              logo:
                type: string
                format: binary
                description: "allowed file extension: jpg, png, jpeg && size <= 1050000 byte"
              title:
                type: string
              descriptions:
                type: string
              members:
                type: integer
    profile:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
        foto:
          type: string
          format: binary
        community:
          type: array
          items:
            type: object
            properties:
              logo:
                type: string
                format: binary
                description: "allowed file extension: jpg, png, jpeg && size <= 1050000 byte"
              title:
                type: string
              status:
                enum:
                  - member
                  - admin              
    addcommunity:
      type: object
      required:
        - "title"
        - "descriptions"
        - "logo"
      properties:
        title:
          type: string
        descriptions:
          type: string
        logo:
          type: string
          format: binary
    updatecommunity:
      type: object
      properties:
        title:
          type: string
        descriptions:
          type: string
        logo:
          type: string
          format: binary
    detailcommunity:
      type: object
      properties:
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        members:
          type: integer
        feed:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              text:
                type: string
              date:
                type: string
    listcommunityevent:
      type: object
      properties:
        id:
          type: integer
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        members:
          type: integer
        event:
          type: array
          items:
            type: object
            properties:
              logo:
                type: string
                format: binary
              title:
                type: string
              description:
                type: string
              date:
                type: string
              price:
                type: string
    memberschema:
      type: array
      items:
        type: string
    makeevent:
      type: object
      properties:
        title:
          type: string
        descriptions:
          type: string
        date_event:
          type: string
        price:
          type: integer
        location:
          type: string
    eventdetail:
      type: object
      properties:
        title:
          type: string
        descriptions:
          type: string
        penyelenggara:
          type: string
        location:
          type: string
        date_event:
          type: string
        partisipasi:
          type: integer
        price:
          type: integer




    responseNonData:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string


###########################
# REQUEST BODY
###########################
  requestBodies:
    requestBodyLogin:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/requestDataLogin"
          example:
            email: mail@gmail.com
            password: qwerty
    requestBodyUser:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/requestDataUser"
          examples:
            example1:
              value:
                name: jack
                username: jack
                gender: male
                email: jack@gmail.com
                password: jackpassword
            example2:
              value:
                name: Yamato
                username: yamato
                gender: female
                email: yamato@gmail.com
                password: yamatopassword
    requestBodyCommunity:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/addcommunity"
          example:
              title: Pengendali Api
              descriptions: Kami adalah pengendali api
              logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/addcommunity"
    updaterequestBodyCommunity:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updatecommunity"
          examples:
            example1:
              value:
                title: Pengendali Api
                descriptions: Kami adalah pengendali api
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png
            example2:
              value:
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png
            example3:
              value:
                title: Pengendali Api
                descriptions: Kami adalah pengendali api
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/updatecommunity"
    updateuserrequestbody:
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/updateDataUser"
          examples:
            username and password:
              value:
                username: jackei
                password: jackeipassword
            just foto:
              value:
                foto: https://static.zerochan.net/Kaedehara.Kazuha.full.3490843.png
            email:
              value:
                email: baru@gmail.com
    eventrequestbody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/makeevent"
          example:
            title: Anniversary
            descriptions: Perayaan Ulang Tahun
            date_event: "2022-10-20 14:30:00"
            price: 250000
            location: Japan

###########################
# RESPONSE
###########################
  responses:
    failedresponse:
      description: Terjadi Kesalahan
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          example: 
            code: 400
            message: Terjadi Kesalahan 
    successresponse:
      description: Success Response Data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          example:
            code: 200
            message: Success
    loginSuccess:
      description: Success Response Data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseLoginWithData"
          examples:
            example1:
              value:
                code: 200
                data:
                  {
                    id: 1,
                    role: admin,
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2Mzk2OTAwMjMsInJvbGUiOiJhZG1pbiIsInVzZXJJZCI6NH0.1Ij1ZVqpqPDOVXzaXyqcyNMlnbLTfwD28Byv0aWNjAQ,
                  }
                message: Login Success
            example2:
              value:
                code: 200
                data:
                  {
                    id: 2,
                    role: member,
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2Mzk2OTAwMjMsInJvbGUiOiJhZG1pbiIsInVzZXJJZCI6NH0.1Ij1ZVqpqPDOVXzaXyqcyNMlnbLTfwD28Byv0aWNjAQ,
                  }
                message: Login Success
    loginFailed:
      description: Bad Request Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          examples:
            example1:
              $ref:  "#/components/examples/emailnotregistered"
            example2:
              $ref:  "#/components/examples/invalidPassword"
            example3:
              $ref:  "#/components/examples/invalidEmail"
    successOperationNonData:
      description: Success Response Non Data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          example:
            code: 200
            message: Success Melakukan ...
    failedsign:
      description: Bad Request Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          examples:
              Email Already Exist:
                $ref: "#/components/examples/emailAlreadyExist"
              Nama Cant Blank:
                $ref: "#/components/examples/nameCantBeEmpty"
              Username Cant Blank:
                $ref: "#/components/examples/usernameCantBeEmpty"
              Gender Cant Blank:
                $ref: "#/components/examples/genderCantBeEmpty"
              Email Cant Blank:
                $ref: "#/components/examples/emailCantBeEmpty"
              Password Cant Blank:
                $ref: "#/components/examples/passwordCantBeEmpty"             
    successgetlistcommunity:
      description: Mendapatkan list community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/listgetcommunity"
          example:
            community:
              [
                {
                  id: 1,
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/cryo_200.png,
                  title: Genshin Players,
                  members: 20313,
                  descriptions: Ini adalah community untuk para player genshin
                },
                {
                  id: 2,
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/dendro_200.png,
                  title: Penggmar Tanaman,
                  members: 2003,
                  descriptions: Selamat datang .............
                }
              ]          
    failedgetcommunity:
      description: Tidak bisa mendapatkan list community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          examples:
            Not Found:
              $ref: "#/components/examples/communityNotFound"
    getprofile:
      description: Berisi Berbagai data yang di meiliki pengguna
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile"
          example:
            name: Jack
            username: jack
            email: jack@gmail.com
            foto: https://www.nicepng.com/png/detail/136-1360042_png-jack-sparrow-pirates-of-the-caribbean-5.png
            community:
              [
                {
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                  title: Pengendali Api,
                  status: admin
                },
                {
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/hydro_200.png,
                  title: Pengendali Air,
                  status: member
                },
              ]
    community:
      description: Data yang akan di tampilakan saat user melihat sebuah community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/detailcommunity"
          examples:
            example1:
              value:
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                title: Pengendali Api
                descriptions: Kumpulan para pengendali api
                members: 5
                feed: [
                        {
                          name: Diluc,
                          text: Melakukan Pencarian Harta Karun,
                          date: "2006-01-02 15:04:05"
                        },
                        {
                          name: Amber,
                          text: Berpatroli di sekitar,
                          date: "2022-01-02 12:12:12"
                        }
                      ]
    communiteventlist:
      description: ini adalah list event yang di adakan oleh community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/listcommunityevent"
          examples:
            example1:
              value:
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                title: Pengendali Api
                description: Kumpulan para pengendali api
                members: 5
                event: [{
                        id: 2,
                        logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                        title: Anniversary 2,
                        descriptions: Anniversary kedua Geshin Impact,
                        date: "2022-12-01 15:04:05",
                        price: 250000
                        },
                        {
                        id: 5,
                        logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                        title: Perayaan Tahun Baru,
                        descriptions: Penyelenggaraan sebuah acara yang ...,
                        date: "2023-01-01 00:00:01",
                        price: 1000000
                        }
                      ]
    members:
      description: ini adalah list member yang ada di community ini
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/memberschema"
          example:
            [
              "Yelan",
              "Ayaka",
              "Eula",
              "Nahida",
              "Keqing"
            ]
    eventdetail:
      description: Ini untuk Halaman Event
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/eventdetail"
          examples:
            example1:
              value:
                title: Anniversary
                descriptions: Perayaan ulang tahun yang ke 1000
                penyelenggara: XXX
                date_event: "2022-10-20 14:30:00"
                partisipasi: 34
                price: 250000


###########################
# PARAMETER
##########################
  parameters:
    ParamId:
      name: id
      in: path
      required: true
      schema:
        type: integer
        example: 1
##########################
# JWT AUTH
###########################
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
##########################
# EXAMPLE
##########################
  examples:
    badRequest:
      value:
        code: 400
        message: Bad Request
    dataNotFound:
      value:
        code: 400
        message: Data Not Found
    communityNotFound:
      value:
        code: 400
        message: Community tidak di temukan
    emailAlreadyExist:
      value:
        code: 400
        message: Email Already Exist
    emailnotregistered:
      value:
        code: 400
        message: Email belum terdaptar
    invalidEmail:
      value:
        code: 400
        message: Invalid Email
    failedtoUploadFile:
      value:
        code: 500
        message: Failed to Upload File
    fileExtensionNotAllowed:
      value:
        code: 400
        message: File Extension Not Allowed
    invalidParam:
      value:
        code: 400
        message: Invalid Param
    invalidPassword:
      value:
        code: 400
        message: Invalid Password
    notAvailable:
      value:
        code: 400
        message: Not Available
    sizeFileTooBig:
      value:
        code: 400
        message: Size File Too Big
    nameCantBeEmpty:
      value:
        code: 400
        message: Nama tidak boleh kosong
    usernameCantBeEmpty:
      value:
        code: 400
        message: Username tidak boleh kosong
    genderCantBeEmpty:
      value:
        code: 400
        message: Gender tidak boleh kosong
    emailCantBeEmpty:
      value:
        code: 400
        message: Email tidak boleh kosong
    passwordCantBeEmpty:
      value:
        code: 400
        message: Password tidak boleh kosong
