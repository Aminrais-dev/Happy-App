openapi: 3.0.0
info:
  title: Capstone Project
  description: Tugas Untuk Peserta Immersive
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/nawihusen/Capstone/1.0.0
  # - description:
  #   url:
tags:
  - name: Login
    description: Login Page
  - name: Sign Up
    description: Sign Page
  - name: User
    description: User Page
  - name: Community
    description: Community Page
  - name: Community Event
    description: Community Event Page
  - name: Community Feed
    description: Community Feed Page
  - name: Community Store
    description: Community Store Page
  - name: Cart
    description: User Cart in a Community
  - name: Community Store
    description: Community Store Page
  - name: Join
    description: Join Event or Community Page
  - name: Payment
    description: Payment_Method


paths:
  ############################
  # GET TOKEN
  ###########################
  /login:
    post:
      tags:
        - Login
      summary: Get token for access to account
      requestBody:
        $ref: "#/components/requestBodies/requestBodyLogin"
      responses:
        "200":
          $ref: "#/components/responses/loginSuccess"
        "400":
          $ref: "#/components/responses/loginFailed"
  ##########################
  # REGISTER
  ##########################
  /register:
    post:
      tags:
        - Sign Up
      summary: Create a new account for customer only
      requestBody:
        $ref: "#/components/requestBodies/requestBodyUser"
      responses:
        "200":
          $ref: "#/components/responses/successOperationNonData"
        "400":
          $ref: "#/components/responses/failedsign"
  ##########################
  # USER
  ##########################
  /user/profile:
    get:
      tags:
        - "User"
      summary: Profile User
      description: Berisi berbagai data yang di miliki oleh user
      security:
        - JWTAuth: []
      responses:
        "200":
          $ref: "#/components/responses/getprofile"
        "400":
          $ref: "#/components/responses/failedresponse"
    put:
      tags:
        - "User"
      summary: Update User data
      description: Digunakan untuk mengubah data yang dimiliki user
      security:
        - JWTAuth: []
      requestBody:
        $ref: "#/components/requestBodies/updateuserrequestbody"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
    delete:
      tags:
        - "User"
      summary: Delete User Account
      description: menghapus akun yang dimiliki user
      security:
        - JWTAuth: []
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
  #########################
  # COMMUNITY
  #########################
  /community:
    get:
      tags:
        - "Community"
      summary: List Community
      security:
        - JWTAuth: []
      parameters:
        - in: query
          name: title
          schema:
            type: string
          description: query param untuk mencari community by title
      description: Berisi list community yang terdaftar
      responses:
        "200":
          $ref: "#/components/responses/successgetlistcommunity"
        "400":
          $ref: "#/components/responses/failedgetcommunity"
    post:
      tags:
        - "Community"
      summary: Add Community
      description: User akan membuat sebuah community
      security:
        - JWTAuth: []
      requestBody:
        $ref: "#/components/requestBodies/requestBodyCommunity"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
  /community/members/{communityid}:
    get:
      tags:
        - "Community"
      summary: Get All Community Members
      description: digunkan untuk mendapatakan semua user yang ada dalam community
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamCommunityId"
      responses:
        "200":
          $ref: "#/components/responses/members"
        "400":
          $ref: "#/components/responses/failedresponse"

  /community/{communityid}:
    get:
      tags:
        - "Community Feed"
      summary: Go to Community Page
      description: masuk ke page community
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamCommunityId"
      responses:
        "200":
          $ref: "#/components/responses/community"
        "400":
          $ref: "#/components/responses/failedresponse"
    put:
      tags:
        - "Community"
      summary: Update Community
      description: Update community hanya bisa dilakukan oleh admin
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamCommunityId"
      requestBody:
        $ref: "#/components/requestBodies/updaterequestBodyCommunity"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
    delete:
      tags:
        - "Community"
      summary: Out from A community
      description: Keluar dari sebuah community
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamId"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"

  /community/history/{communtyid}:
    get:
      tags:
        - "Community"
      summary: Get A Selled Product
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamCommunityId"
      description: memdapatkan data produck yang di beli oleh user
      responses:
        "200":
          $ref: "#/components/responses/responsehistory"
        "400":
          $ref: "#/components/responses/failedresponse"
  #########################
  # JOIN
  #########################
  /join/community/{communityid}:
    post:
      tags:
        - "Join"
      summary: Join To Community
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamCommunityId"
      description: user melakukan join ke sebuah community
      responses:
        "200":
          $ref: "#/components/responses/successOperationNonData"
        "400":
          $ref: "#/components/responses/failedresponse"
  /join/event/{id}:
    post:
      tags:
        - "Join"
      summary: Join To Community
      security:
        - JWTAuth: []
      requestBody: 
        $ref: "#/components/requestBodies/paymentmethod"
      description: user melakukan join ke sebuah event menggunakan id event
      parameters:
        - $ref: "#/components/parameters/ParamId"
      responses:
        "200":
          $ref: "#/components/responses/successOperationNonData"
        "400":
          $ref: "#/components/responses/failedresponse"

  ################################
  # EVENT
  ################################
  /event:
    get:
      tags:
        - "Community Event"
      summary: Go To Event List
      security:
        - JWTAuth: []
      parameters:
        - in: query
          name: title
          schema:
            type: string
          description: query param untuk mencari event by title
      description: Memasuki page semua event list
      responses:
        "200":
          $ref: "#/components/responses/eventlist"
        "400":
          $ref: "#/components/responses/failedresponse"

  /community/{id}/event:
    get:
      tags:
        - "Community Event"
      summary: Go To Communities Event
      description: Memasuki page event yang di adakan oleh community yang bersangkutan
      security:
        - JWTAuth: []
      responses:
        "200":
          $ref: "#/components/responses/communiteventlist"
        "400":
          $ref: "#/components/responses/failedresponse"
    post:
      tags:
        - "Community Event"
      summary: Add An Event In Community
      description: Menambahkan event pada sebuah community
      security:
        - JWTAuth: []
      requestBody:
        $ref: "#/components/requestBodies/eventrequestbody"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"

  /event/{id}:
    get:
      tags:
        - "Community Event"
      summary: Go to Event Detail Page
      description: Menampilkan halaman yang memuat event secara rinci
      security:
        - JWTAuth: []
      responses:
        "200":
          $ref: "#/components/responses/eventdetail"
        "400":
          $ref: "#/components/responses/failedresponse"

  ################################
  # FEED
  ################################
  /community/{communityid}/feed:
    post:
      tags:
        - "Community Feed"
      summary: add feed in community
      description: Menambahkan feed pada community
      security:
        - JWTAuth: []
      requestBody:
        $ref: "#/components/requestBodies/feedrequestbody"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"

  /feed/{feedid}:
    get:
      tags:
        - "Community Feed"
      summary: get feed details
      description: Menampilkan Feed serta Comment Feed
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/FeedId"
      responses:
        "200":
          $ref: "#/components/responses/feed"
        "400":
          $ref: "#/components/responses/failedresponse"

  /feed/{feedid}/comment:
    post:
      tags:
        - "Community Feed"
      summary: Add A Comment To A Feed
      security:
        - JWTAuth: []
      description: Menambahkan Comment pada sebuah postingan
      parameters:
        - $ref: "#/components/parameters/FeedId"
      requestBody:
        $ref: "#/components/requestBodies/addcommenttofeed"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"

  ################################
  # STORE
  ################################
  /community/{communityid}/store:
    get:
      tags:
        - "Community Store"
      summary: Get List Product Of Community
      security:
        - JWTAuth: []
      description: Mendapatkan list dari produk produk yang dimiliki oleh sebuah community
      responses:
        "200":
          $ref: "#/components/responses/listproduct"
        "400":
          $ref: "#/components/responses/failedresponse"
    post:
      tags:
        - "Community Store"
      summary: Add Product in Community
      description: Menambah kan product pada sebuah community
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamCommunityId"
      requestBody:
        $ref: "#/components/requestBodies/addproduct"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"

  /store/{productid}:
    get:
      tags:
        - "Community Store"
      summary: Detail Product
      description: digunakan untuk melihat detail yang di miliki oleh sebuah product
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamProductId"
      responses:
        "200":
          $ref: "#/components/responses/datailProduct"
        "400":
          $ref: "#/components/responses/failedresponse"
    put:
      tags:
        - "Community Store"
      summary: Update Product
      description: Melakukan update pada sebuah produk yang di miliki oleh community
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamProductId"
      requestBody:
        $ref: "#/components/requestBodies/updateproduct"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"
    delete:
      tags:
        - "Community Store"
      summary: Delete A Product
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamProductId"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse"

#############################
# CART
#############################
  /cart/{commuunityid}:
    get:
      tags:
        - "Cart"
      summary: Get a cart user from a community
      description: mendapatkan list cart user yang ada di suatu community
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamCommunityId"
      responses:
        "200":
          $ref: "#/components/responses/cartuser"
        "400":
          $ref: "#/components/responses/failedresponse"
  /cart/{productid}:
    post:
      tags:
        - "Cart"
      summary: Add product to Cart
      description: Menambahkan sebuah barang yang ada di communinty kedalam Cart
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamProductId"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse" 
  /cart/{cartid}:  
    delete:
      tags:
        - "Cart"
      summary: Delete from cart user
      description: menghapus sebuah barang yang ada di cart
      security:
        - JWTAuth: []
      parameters:
        - $ref: "#/components/parameters/ParamProductId"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse" 
  /checkout:
    post:
      tags:
        - "Cart"
      summary: Checkout Item
      description: Melakukan checkout pada item yang ada di cart
      security:
        - JWTAuth: []
      requestBody: 
        $ref: "#/components/requestBodies/bodycheckout"
      responses:
        "200":
          $ref: "#/components/responses/successresponse"
        "400":
          $ref: "#/components/responses/failedresponse" 


  

####################################
# COMPONENTS
####################################
components:
  ##########################
  # SCHEMA
  ###########################
  schemas:
    requestDataLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    responseLoginWithData:
      type: object
      properties:
        Code:
          type: integer
        Data:
          type: object
          properties:
            ID:
              type: integer
            Token:
              type: string
            Role:
              type: string
        Message:
          type: string
    requestDataUser:
      type: object
      required:
        - name
        - username
        - gender
        - email
        - password
      properties:
        name:
          type: string
          minLength: 1
        username:
          type: string
          minLength: 1
        gender:
          enum:
            - male
            - female
        email:
          type: string
          format: email
          minLength: 5
          description: email must be unique
        password:
          type: string
          minLength: 6
    updateDataUser:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        username:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 5
          description: email must be unique
        password:
          type: string
          minLength: 6
        foto:
          type: string
          format: binary
    listgetcommunity:
      type: object
      properties:
        community:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              logo:
                type: string
                format: binary
                description: "allowed file extension: jpg, png, jpeg && size <= 1050000 byte"
              title:
                type: string
              descriptions:
                type: string
              members:
                type: integer
    profile:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
        foto:
          type: string
          format: binary
        gender:
          enum:
            - male
            - female
        community:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              logo:
                type: string
                format: binary
                description: "allowed file extension: jpg, png, jpeg && size <= 1050000 byte"
              title:
                type: string
              role:
                enum:
                  - member
                  - admin
    addcommunity:
      type: object
      required:
        - "title"
        - "descriptions"
        - "logo"
      properties:
        title:
          type: string
        descriptions:
          type: string
        logo:
          type: string
          format: binary
    updatecommunity:
      type: object
      properties:
        title:
          type: string
        descriptions:
          type: string
        logo:
          type: string
          format: binary
    detailcommunity:
      type: object
      properties:
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        members:
          type: integer
        feed:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              text:
                type: string
              date:
                type: string
    listcommunityevent:
      type: object
      properties:
        id:
          type: integer
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        members:
          type: integer
        event:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
              logo:
                type: string
                format: binary
              title:
                type: string
              description:
                type: string
              date:
                type: string
              price:
                type: string
    memberschema:
      type: array
      items:
        type: string
    makeevent:
      type: object
      properties:
        title:
          type: string
        descriptions:
          type: string
        date_event:
          type: string
        price:
          type: integer
        location:
          type: string
    eventdetail:
      type: object
      properties:
        title:
          type: string
        status:
          type: string
        descriptions:
          type: string
        penyelenggara:
          type: string
        location:
          type: string
        date_event:
          type: string
        partisipasi:
          type: integer
        price:
          type: integer
    makefeed:
      type: object
      properties:
        text:
          type: string
    feeddetail:
      type: object
      properties:
        name:
          type: string
        text:
          type: string
        date:
          type: string
    joinevent:
      type: object
      properties:
        payment_method:
          type: string
    schemalistprod:
      type: object
      properties:
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        members:
          type: integer
        products:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              price:
                type: string
              photo:
                type: string
                format: binary
    detailProduct:
      type: object
      properties:
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        members:
          type: integer
        product:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            descriptions:
              type: string
            photo:
              type: string
            price:
              type: integer
            stock:
              type: integer
            community_id:
              type: integer
    schemaaddproduct:
      type: object
      properties:
        name:
          type: string
        descriptions:
          type: string
        photo:
          type: string
          format: binary
        stock:
          type: integer
        price:
          type: integer
    cart:
      type: object
      properties:
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        members:
          type: integer
        cart:
          type: array
          items:
            type: object
            properties:
              cartid:
                type: integer
              price:
                type: integer
              name:
                type: string
              photo:
                type: string
                format: binary
              descriptions:
                type: string
    history:
      type: object
      properties:
        logo:
          type: string
          format: binary
        title:
          type: string
        descriptions:
          type: string
        list:
          type: array
          items:
            type: object
            properties:
              cartid:
                type: string
              name:
                type: string
              buyer:
                type: string
              photo:
                type: string
                format: binary
              price:
                type: integer
    responseNonData:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    bayarevent:
      type: object
      properties:
        type_payment:
          type: string
    checkout:
      type: object
      properties:
        cartid:
          type: array
        street:
          type: string
        city:
          type: string
        province:
          type: string
        type_payment:
          type: string

  ###########################
  # REQUEST BODY
  ###########################
  requestBodies:
    requestBodyLogin:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/requestDataLogin"
          example:
            email: mail@gmail.com
            password: qwerty
    requestBodyUser:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/requestDataUser"
          examples:
            example1:
              value:
                name: jack
                username: jack
                gender: male
                email: jack@gmail.com
                password: jackpassword
            example2:
              value:
                name: Yamato
                username: yamato
                gender: female
                email: yamato@gmail.com
                password: yamatopassword
    requestBodyCommunity:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/addcommunity"
          example:
            title: Pengendali Api
            descriptions: Kami adalah pengendali api
            logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/addcommunity"
    updaterequestBodyCommunity:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updatecommunity"
          examples:
            example1:
              value:
                title: Pengendali Api
                descriptions: Kami adalah pengendali api
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png
            example2:
              value:
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png
            example3:
              value:
                title: Pengendali Api
                descriptions: Kami adalah pengendali api
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/updatecommunity"
    updateuserrequestbody:
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/updateDataUser"
          examples:
            username and password:
              value:
                username: jackei
                password: jackeipassword
            just foto:
              value:
                foto: https://static.zerochan.net/Kaedehara.Kazuha.full.3490843.png
            email:
              value:
                email: baru@gmail.com
    eventrequestbody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/makeevent"
          example:
            title: Anniversary
            descriptions: Perayaan Ulang Tahun
            date_event: "2022-10-20 14:30:00"
            price: 250000
            location: Japan
    feedrequestbody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/makefeed"
          example:
            text: hari ini cuaca cerah
    joineventrequestbody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/joinevent"
          example:
            payment_method: "gopay"
    addcommenttofeed:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/makefeed"
          example:
            text: di tunngu ...
    addproduct:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/schemaaddproduct"
          example:
            name: Baju Kaos
            descriptions: Ini adalah
            photo: kaos.jpg
            stock: 100
            price: 100000
    updateproduct:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/schemaaddproduct"
          examples:
            example1:
              value:
                stock: 200
                price: 150000
            example2:
              value:
                photo: photobaru.jpg
                name: namabaru

        multipart/form-data:
          schema:
            $ref: "#/components/schemas/schemaaddproduct"
    paymentmethod:
      content:
        application/json: 
          schema:
            $ref: "#/components/schemas/bayarevent"
          examples:
            example1:
              value:
                type_payment: GOPAY
            example2:
              value:
                type_payment: BCA Virtual Account
    bodycheckout:
      content: 
        application/json:
          schema:
            $ref: "#/components/schemas/checkout"
          examples:
            example1:
              value:
                cartid: [1,4,5,7]
                street: jalan raya
                city: Malang
                province: Jawa
                type_payment: GOPAY
            example2:
              value:
                cartid: [2]
                street: jalan baru
                city: amuntai
                province: kalimantan selatan
                type_payment: BCA Virtual Account

            

  ###########################
  # RESPONSE
  ###########################
  responses:
    failedresponse:
      description: Terjadi Kesalahan
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          example:
            code: 400
            message: Terjadi Kesalahan
    successresponse:
      description: Success Response Data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          example:
            code: 200
            message: Success
    loginSuccess:
      description: Success Response Data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseLoginWithData"
          examples:
            example1:
              value:
                code: 200
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2Mzk2OTAwMjMsInJvbGUiOiJhZG1pbiIsInVzZXJJZCI6NH0.1Ij1ZVqpqPDOVXzaXyqcyNMlnbLTfwD28Byv0aWNjAQ,
                message: login success
                status: success
    loginFailed:
      description: Bad Request Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          examples:
            example1:
              $ref: "#/components/examples/emailnotregistered"
            example2:
              $ref: "#/components/examples/invalidPassword"
            example3:
              $ref: "#/components/examples/invalidEmail"
    successOperationNonData:
      description: Success Response Non Data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          example:
            code: 200
            message: Success Melakukan ...
    failedsign:
      description: Bad Request Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          examples:
            Email Already Exist:
              $ref: "#/components/examples/emailAlreadyExist"
            Nama Cant Blank:
              $ref: "#/components/examples/nameCantBeEmpty"
            Username Cant Blank:
              $ref: "#/components/examples/usernameCantBeEmpty"
            Gender Cant Blank:
              $ref: "#/components/examples/genderCantBeEmpty"
            Email Cant Blank:
              $ref: "#/components/examples/emailCantBeEmpty"
            Password Cant Blank:
              $ref: "#/components/examples/passwordCantBeEmpty"
    successgetlistcommunity:
      description: Mendapatkan list community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/listgetcommunity"
          example:
            community:
              [
                {
                  id: 1,
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/cryo_200.png,
                  title: Genshin Players,
                  members: 20313,
                  descriptions: Ini adalah community untuk para player genshin,
                },
                {
                  id: 2,
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/dendro_200.png,
                  title: Penggmar Tanaman,
                  members: 2003,
                  descriptions: Selamat datang .............,
                },
              ]
    failedgetcommunity:
      description: Tidak bisa mendapatkan list community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/responseNonData"
          examples:
            Not Found:
              $ref: "#/components/examples/communityNotFound"
    getprofile:
      description: Berisi Berbagai data yang di meiliki pengguna
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/profile"
          example:
            name: Jack
            username: jack
            email: jack@gmail.com
            gender: male
            foto: https://www.nicepng.com/png/detail/136-1360042_png-jack-sparrow-pirates-of-the-caribbean-5.png
            community:
              [
                {
                  id: 1,
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                  title: Pengendali Api,
                  role: admin,
                },
                {
                  id: 2,
                  logo: https://www.gensh.in/fileadmin/Content/Game/Elements/hydro_200.png,
                  title: Pengendali Air,
                  role: member,
                },
              ]
    community:
      description: Data yang akan di tampilakan saat user melihat sebuah community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/detailcommunity"
          examples:
            example1:
              value:
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                title: Pengendali Api
                descriptions: Kumpulan para pengendali api
                members: 5
                feed:
                  [
                    {
                      id: 2,
                      name: Diluc,
                      text: Melakukan Pencarian Harta Karun,
                      date: "2006-01-02 15:04:05",
                    },
                    {
                      id: 4,
                      name: Amber,
                      text: Berpatroli di sekitar,
                      date: "2022-01-02 12:12:12",
                    },
                  ]
    communiteventlist:
      description: ini adalah list event yang di adakan oleh community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/listcommunityevent"
          examples:
            example1:
              value:
                id: 1
                role: member
                logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                title: Pengendali Api
                description: Kumpulan para pengendali api
                members: 5
                event:
                  [
                    {
                      id: 2,
                      logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                      title: Anniversary 2,
                      members: 4,
                      descriptions: Anniversary kedua Geshin Impact,
                      date: "2022-12-01 15:04:05",
                      price: 250000,
                      location: japan
                    },
                    {
                      id: 5,
                      logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                      title: Perayaan Tahun Baru,
                      members: 5,
                      descriptions: Penyelenggaraan sebuah acara yang ...,
                      date: "2023-01-01 00:00:01",
                      price: 1000000,
                      location: warung
                    },
                  ]
    members:
      description: ini adalah list member yang ada di community ini
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/memberschema"
          example: ["Yelan", "Ayaka", "Eula", "Nahida", "Keqing"]
    eventdetail:
      description: Ini untuk Halaman Event
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/eventdetail"
          examples:
            example1:
              value:
                title: Anniversary
                status: join
                descriptions: Perayaan ulang tahun yang ke 1000
                penyelenggara: XXX
                date_event: "2022-10-20 14:30:00"
                partisipasi: 34
                price: 250000
                location: Japan
            example2:
              value:
                title: Anniversary
                status: not join
                descriptions: Perayaan ulang tahun yang ke 1000
                penyelenggara: XXX
                date_event: "2022-10-20 14:30:00"
                partisipasi: 34
                price: 250000
                location: Malang
    feed:
      description: Data yang akan di tampilakan saat user melihat sebuah community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/feeddetail"
          examples:
            example1:
              value:
                name: Rendi
                text: Cuaca cerah
                date: "26 januari"
                comment:
                  [
                    {
                      name: Diluc,
                      text: Melakukan Pencarian Harta Karun,
                      date: "15 februari",
                    },
                    {
                      name: Amber,
                      text: Berpatroli di sekitar,
                      date: "19 februari",
                    },
                  ]
    listproduct:
      description: Berisi daftar barang yang di jual oleh sebuah community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/schemalistprod"
          example:
            logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
            title: Pengendali Api
            descriptions: Kumpulan para pengendali api
            members: 5
            products:
              [
                { id: 1, name: baju kaos, price: 100000, photo: bajukaos.jpg },
                {
                  id: 2,
                  name: celana panjang,
                  price: 200000,
                  photo: celana.jpg,
                },
              ]
    datailProduct:
      description: berisi berbagai hal yang berkaitan dengan product
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/detailProduct"
          example:
            logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
            title: Pengendali Api
            descriptions: Kumpulan para pengendali api
            members: 5
            product:
              {
                id: 3,
                name: Baju Kaos,
                descriptions: ini adalah baju kaos terbaik sepanjang sejarah,
                price: 1000000,
                photo: bajukaos.jpg,
                stock: 100,
              }
    eventlist:
      description: ini adalah list event yang di adakan oleh community
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/listcommunityevent"
          examples:
            example1:
              value:
                event:
                  [
                    {
                      id: 2,
                      logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                      title: Anniversary 2,
                      members: 5,
                      descriptions: Anniversary kedua Geshin Impact,
                      date: "2022-12-01 15:04:05",
                      price: 250000,
                      location: japan
                    },
                    {
                      id: 5,
                      logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
                      title: Perayaan Tahun Baru,
                      penyelenggara: community minecraft,
                      descriptions: Penyelenggaraan sebuah acara yang ...,
                      date: "2023-01-01 00:00:01",
                      price: 1000000,
                      location: cafe nama
                    },
                  ]
    cartuser:
      description: berisi suatu data cart yang dimiliki user
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/cart"
          example:
            logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
            title: Pengendali Api
            descriptions: Kumpulan para pengendali api
            members: 5
            cart: [
                    {
                      name: Kaos,
                      price: 100000,
                      descriptions: kaos yang sangat nyaman,
                      photo: kaos.jpg
                    },
                    {
                      name: Celana,
                      price: 233000,
                      descriptions: celana yang sangat nyaman,
                      photo: celana.jpg
                    }
                  ]
    responsehistory:
      description: berisi history pembelian barang yang dilakukan oleh user
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/history"
          example:
            logo: https://www.gensh.in/fileadmin/Content/Game/Elements/pyro_200.png,
            title: Pengendali Api
            descriptions: Kumpulan para pengendali api
            list: [
                    {
                      name: Kaos,
                      buyer: Diluc,
                      photo: kaos.jpg,
                      price: 100000
                    },
                    {
                      name: celana,
                      buyer: Amber,
                      photo: celana.jpg,
                      price: 50000
                    }
                  ]


                  

  ###########################
  # PARAMETER
  ##########################
  parameters:
    ParamId:
      name: id
      in: path
      required: true
      schema:
        type: integer
        example: 1
    FeedId:
      name: feedid
      in: path
      required: true
      schema:
        type: integer
        example: 1
    ParamCommunityId:
      name: communityid
      in: path
      required: true
      schema:
        type: integer
        example: 1
    ParamFeedId:
      name: communityid
      in: path
      required: true
      schema:
        type: integer
        example: 1
    ParamProductId:
      name: productid
      in: path
      required: true
      schema:
        type: integer
        example: 1
    CartId:
      name: cartid
      in: path
      required: true
      schema:
        type: integer
        example: 1
  ##########################
  # JWT AUTH
  ###########################
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  ##########################
  # EXAMPLE
  ##########################
  examples:
    badRequest:
      value:
        code: 400
        message: Bad Request
    dataNotFound:
      value:
        code: 400
        message: Data Not Found
    communityNotFound:
      value:
        code: 400
        message: Community tidak di temukan
    emailAlreadyExist:
      value:
        code: 400
        message: Email Already Exist
    emailnotregistered:
      value:
        code: 400
        message: Email belum terdaptar
    invalidEmail:
      value:
        code: 400
        message: Invalid Email
    failedtoUploadFile:
      value:
        code: 500
        message: Failed to Upload File
    fileExtensionNotAllowed:
      value:
        code: 400
        message: File Extension Not Allowed
    invalidParam:
      value:
        code: 400
        message: Invalid Param
    invalidPassword:
      value:
        code: 400
        message: Invalid Password
    notAvailable:
      value:
        code: 400
        message: Not Available
    sizeFileTooBig:
      value:
        code: 400
        message: Size File Too Big
    nameCantBeEmpty:
      value:
        code: 400
        message: Nama tidak boleh kosong
    usernameCantBeEmpty:
      value:
        code: 400
        message: Username tidak boleh kosong
    genderCantBeEmpty:
      value:
        code: 400
        message: Gender tidak boleh kosong
    emailCantBeEmpty:
      value:
        code: 400
        message: Email tidak boleh kosong
    passwordCantBeEmpty:
      value:
        code: 400
        message: Password tidak boleh kosong
