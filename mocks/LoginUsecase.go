// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UsecaseLogin is an autogenerated mock type for the UsecaseInterface type
type UsecaseLogin struct {
	mock.Mock
}

// LoginAuthorized provides a mock function with given fields: email, password
func (_m *UsecaseLogin) LoginAuthorized(email string, password string) (string, error) {
	ret := _m.Called(email, password)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(email, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(email, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUsecaseLogin interface {
	mock.TestingT
	Cleanup(func())
}

// NewUsecaseLogin creates a new instance of UsecaseLogin. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUsecaseLogin(t mockConstructorTestingTNewUsecaseLogin) *UsecaseLogin {
	mock := &UsecaseLogin{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
